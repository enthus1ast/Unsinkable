[gd_scene load_steps=4 format=2]

[ext_resource path="res://white.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]

code = "shader_type canvas_item;

uniform vec2 pos = vec2(100.0,1.0);

vec2 hash2(vec2 p ) {
	return fract(sin(vec2(dot(p, vec2(123.4, 748.6)), dot(p, vec2(547.3, 659.3))))*5232.85324);   
}
float hash(vec2 p) {
	return fract(sin(dot(p, vec2(43.232, 75.876)))*4526.3257);   
}

float voronoi(vec2 p,float time) {
	vec2 n = floor(p);
	vec2 f = fract(p);
	float md = 5.0;
	vec2 m = vec2(0.0,0.0);
	for (float i = -1.0;i<=1.0;i++) {
		for (float j = -1.0;j<=1.0;j++) {
		vec2 g = vec2(i, j);
			vec2 o = hash2(n+g);
			o = 0.5+0.5*sin(time+5.038*o);
			vec2 r = g + o - f;
			float d = dot(r, r);
			if (d<md) {
				md = d;
				m = n+g+o;
			}
		}
	}
	return md;
}

float ov(vec2 p,float time) {
	float v = 0.0;
	float a = 0.4;
	for (float i = 0.0;i<3.0;i++) {
		v+= voronoi(p,time)*a;
		p*=2.0;
		a*=0.5;
	}
	return v;
}

void fragment() {
	vec2 uv = UV;
	uv+=pos/10000.0;
	vec4 a = vec4(0.2,0.1,1.0,1.0);
	vec4 b = vec4(0.8, 0.8, .8, 0.8);
	COLOR = vec4(mix(a, b, smoothstep(0.15, 1.4, ov(uv*400.0,TIME))));
}"

[sub_resource type="ShaderMaterial" id=2]

render_priority = 0
shader = SubResource( 1 )
shader_param/pos = null
_sections_unfolded = [ "shader" ]

[node name="waterShader" type="Sprite" index="0"]

show_behind_parent = true
material = SubResource( 2 )
position = Vector2( 677.969, -3900.27 )
scale = Vector2( 170, 170 )
texture = ExtResource( 1 )
_sections_unfolded = [ "Material", "Transform", "Visibility", "Z Index", "material" ]


